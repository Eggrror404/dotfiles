(defwidget _smallbox [box_class label1 label2]
  (box :hexpand true
       :halign "start"
       :orientation "vertical"
       :space-evenly false
       :width 200
       :class box_class
    (label :halign "start"
           :text label1
           :class "label1")
    (label :halign "start"
           :text label2
           :class "label2")))

(defwidget _playerctl [cover label title artist volume status volume_cmd prev_player next_player status_cmd]
  (box :hexpand true 
       :halign "start" 
       :orientation "vertical" 
       :space-evenly false 
       :class "bolt-pctl-box" 
       :style "background-image: radial-gradient(circle farthest-side at bottom, rgba(23, 28, 33, 0.7) 100%), url(\"${cover}\")"
       :width 200
       :height 200
    (box :space-evenly false 
         :orientation "vertical" 
         :class "bolt-pctl-label-title-artist"
      (box :space-evenly false
           :orientation "horizontal"
        (label :halign "start" 
               :text label 
               :class "bolt-pctl-label")
        (button :halign "end"
                :hexpand true
                :onclick prev_player
                :class "pctl-player-prev" "⯇")
        (button :halign "end"
                :onclick next_player
                :class "pctl-player-next" "⯈"))
      (label :halign "start" 
             :limit-width 20 
             :wrap true 
             :xalign 0.0 
             :text title 
             :class "bolt-pctl-title")
      (label :halign "start" 
             :limit-width 20 
             :text artist 
             :class "bolt-pctl-artist"))
    (box :vexpand true 
         :valign "end" 
         :hexpand true 
         :space-evenly false 
         :class "bolt-pctl-status-volume-box"
      (eventbox :onscroll volume_cmd
        (box :space-evenly false 
             :spacing 5 
             :class "bolt-pctl-volume"
          (label :text "" 
                 :class "bolt-pctl-volume-icon")
          (label :text volume 
                 :class "bolt-pctl-volume-label")))
      (button :hexpand true 
              :halign "end" 
              :onclick status_cmd 
              :class "bolt-pctl-status"  {status == "Playing" ? "" : ""}))))

(defwidget _boltuptime [label uptime]
  (box :space-evenly false 
       :class "bolt-uptime-box" 
       :spacing 8 
       :halign "start"
    (label :text "" 
           :class "bolt-uptime-hl")
    (box :valign "center" 
         :orientation "vertical" 
         :class "bolt-uptime-label-value" 
         :space-evenly false
      (label :halign "start" 
             :class "bolt-uptime-label" 
             :text label)
      (label :limit-width 15 
             :halign "start" 
             :class "bolt-uptime-value" 
             :text uptime))))

(defwidget _boltwifi [label icon ssid]
  (box :valign "center"
       :height 100 
       :valign "center" 
       :hexpand true 
       :space-evenly false 
       :class "bolt-wifi-box"
    (box :valign "center" 
         :hexpand true 
         :orientation "vertical" 
         :space-evenly false 
         :class "bolt-wifi-label-ssid"
      (label :halign "start" 
             :class "bolt-wifi-label" 
             :text label)
      (label :halign "start" 
             :class "bolt-wifi-ssid" 
             :text ssid))
    (label :vexpand false 
           :valign "center" 
           :halign "end" 
           :class "bolt-wifi-icon" 
           :text icon)))

; vim:ft=yuck
