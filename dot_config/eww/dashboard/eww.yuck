(defwidget db-label [icon text]
  (box :class "widget-label"
       :orientation "h"
       :halign "start"
       :space-evenly false
       :spacing 15
    (label :class "widget-label-icon"
           :text icon)
    (label :calss "widget-label-text"
           :text text)))

(defwidget db-top []
  (box :class "db-top"
       :orientation "h"
       :vexpand false
       :hexpand false
       :height 25
    (box :orientation "h"
         :space-evenly false
         :spacing 10
      (label :class "icon"
             :halign "start"
             :text "Û∞ÆØ")
      (label :class "top-welcome"
             :hailgn "start"
             :text "Welcome ${session.fullname}"))
    (box :orientation "h"
         :space-evenly false
         :halign "end"
         :spacing 10
      (label :class "time"
             :text "${time.hour}:${time.min}")
      (box :class "pfp"
           :width 25
           :style "background-image: url(\"file://${session.profilePic}\");"))))

(defwidget db-session []
  (box :class "widget db-session"
       :orientation "h"
       :space-evenly false
       :height 150
    (box :class "pfp"
         :width 135
         :style "background-image: url(\"file://${session.profilePic}\");")
    (box :class "session-text"
         :orientation "v"
         :vexpand false
         :hexpand true
         :valign "center"
         :space-evenly false
         :spacing 4
      (label :class "session-user"
             :halign "center"
             :text "${session.username}@${session.hostname}")
      (label :class "session-name"
             :halign "center"
             :text "on ${session.sessionName}")
      (label :class "session-uptime"
             :halign "center"
             :wrap true
             :text {session.uptime}))))

(defwidget db-system []
  (box :class "widget db-system"
       :orientation "v"
       :space-evenly false
       :spacing 8
    (box :orientation "h"
         :space-evenly false
         :spacing 20
      (label :class "db-system-icon"
             :text "ÔåÉ")
      (label :class "db-system-text"
             :text {session.distrib}))
    (box :orientation "h"
         :space-evenly false
         :spacing 20
      (label :class "db-system-icon"
             :text "Ôåö")
      (label :class "db-system-text"
             :text {session.kernel}))
    (box :orientation "h"
         :space-evenly false
         :spacing 20
      (label :class "db-system-icon"
             :text "Óûï")
      (label :class "db-system-text"
             :text {session.shell}))
    (box :orientation "h"
         :space-evenly false
         :spacing 20
      (label :class "db-system-icon"
             :text "Û∞èñ")
      (label :class "db-system-text"
             :text "${session.packages} (pacman)"))))

(defwidget db-player [current]
  (box :class "widget db-player"
       :orientation "v"
       :space-evenly false
       :spacing 10
       :height 160
       :style "background-image: radial-gradient(circle at center, rgba(30, 32, 48, 0.2), rgba(30, 32, 48, 0.8) 80%), url(\"${current.artUrl}\");"
    (box :class "player-upper"
         :vexpand true
         :valign "start"
         :orientation "v"
         :space-evenly false
      (box :class "player-player"
           :orientation "h"
        (label :class "player-state"
               :halign "start"
               :text "${current.player} ¬∑ ${current.status}")
        (button :class "player-next-player ${arraylength(player) > 1 ? "" : "disabled"}"
                :halign "end"
                :onclick "eww update player_index=${(player_index + 1) % arraylength(player)}" "üûÇ"))
      (label :class "player-title"
             :halign "start"
             :limit-width 16
             :show_truncated true
             :tooltip {current.title}
             :text {current.title})
      (label :class "player-artist"
             :halign "start"
             :limit-width 20
             :text {current.artist}))
    (box :class "player-lower"
         :valign "end"
         :orientation "h"
      (eventbox :onscroll "scripts/control player volume-{}"
                :halign "start"
        (label :class "player-volume"
               :markup "<span size='18pt'>Û∞ãé </span><span size='14pt' rise='2pt'>${round(current.volume * 100, 0)}%</span>"))
      (eventbox :halign "end"
                :onhover "eww update player_rev=true"
                :onhoverlost "eww update player_rev=false"
        (box :orientation "h"
             :space-evenly false
          (revealer :transition "slideleft"
                    :reveal player_rev
                    :duration "550ms"
            (box :orientation "h"
                 :space-evenly false
              (button :onclick "playerctl previous --player ${current.player}"
                      :class "player-prev" "Û∞º®")
              (button :onclick "playerctl next --player ${current.player}"
                      :class "player-next" "Û∞ºß")
              (button :onclick "playerctl stop --player ${current.player}"
                      :class "player-stop" "Û∞ìõ")))
          (button :onclick "playerctl play-pause --player ${current.player}"
                  :class "player-playpause" {current.status == "Playing" ? "Û∞è¶" : "Û∞êç"}))))))
(defvar player_rev false)

(defwidget quickset-button [icon-active icon-inactive active name label toggle-cmd more-cmd]
  (box :class "quickset-button quickset-button-${name} ${active ? 'active' : ''}"
       :orientation "h"
       :space-evenly false
    (button :class "quickset-toggle"
            :hexpand true
            :onclick toggle-cmd
      (box :orientation "h"
           :space-evenly false
        (label :class "quickset-button-icon"
               :text {active ? icon-active : icon-inactive})
        (label :class "quickset-button-label"
               :limit-width 12
               :text label)))
    (button :class "quickset-more"
            :onclick more-cmd "ÔÑÖ")))

(defwidget quickset-scale [icon-active icon-inactive active name value label onchange toggle-cmd]
  (box :class "quickset-scale quickset-scale-${name} ${active ? 'active' : ''}"
       :orientation "h"
       :space-evenly false
       :tooltip "${label}: ${value}%"
    (button :class "quickset-scale-toggle"
            :onclick toggle-cmd {active ? icon-active : icon-inactive})
    (scale :orientation "h"
           :hexpand true
           :min 0 :max 101 :value value
           :onchange onchange)))

(defwidget db-quickset []
  (box :class "widget db-quickset"
       :orientation "v"
       :space-evenly false
       :spacing 10
    (box :orientation "h"
         :spacing 10
      (quickset-button :name "net" :active {net.device != "NONE"} :label {net.label}
                       :icon-active {net.device == "ETHERNET" ? "Û∞åó" :
                                     net.signal == 0 ? "Û∞§Æ" : net.signal < 26 ? "Û∞§ü" :
                                     net.signal < 51 ? "Û∞§¢" : net.signal < 76 ? "Û∞§•" : "Û∞§®"}
                       :icon-inactive "Û∞åô"
                       :toggle-cmd {net.device == "WIFI" ? "nmcli radio wifi off" : net.device == "NONE" ? "nmcli radio wifi on" : ""}
                       :more-cmd "scripts/popup network")
      (quickset-button :name "bt" :active {bt.power} :label "Bluetooth"
                       :icon-active "Û∞ÇØ" :icon-inactive "Û∞Ç≤"
                       :toggle-cmd {bt.power ? "bluetoothctl power off" : "bluetoothctl power on"}
                       :more-cmd "scripts/popup bluetooth"))
    (box :orientation "h"
         :spacing 10
      (quickset-button :name "dnd" :active dnd-enabled :label {dnd-enabled ? "No Disturb" : "Notification"}
                       :icon-active "Û∞Çõ" :icon-inactive "Û∞Çû"
                       :toggle-cmd "dunstctl set-paused toggle && eww update dnd-enabled=${!dnd-enabled}"
                       :more-cmd "")
      (quickset-button :name "caff" :active caffeine :label "Caffeine"
                       :icon-active "Óòõ" :icon-inactive "Û∞í≤"
                       :toggle-cmd "eww update caffeine=${!caffeine}"
                       :more-cmd ""))
    (box :class "quickset-divider")
    (quickset-scale :name "vol" :label "Volume"
                    :icon-active {vol.volume <= 10 ? "Û∞ïø" : vol.volume <= 40 ? "Û∞ñÄ" : "Û∞ïæ"}
                    :icon-inactive "Û∞ñÅ" :active {!vol.mute}
                    :value {vol.volume}
                    :onchange "amixer -D pulse sset Master {}%"
                    :toggle-cmd "amixer -D pulse sset Master toggle")
    (quickset-scale :name "mic" :label "Mic"
                    :icon-active "Û∞ç¨" :icon-inactive "Û∞ç≠"
                    :active {!vol.mic_mute}
                    :value {vol.mic}
                    :onchange "amixer -D pulse sset Capture {}%"
                    :toggle-cmd "amixer -D pulse sset Capture toggle")
    (quickset-scale :name "bright" :label "Brightness"
                    :icon-active "Û∞É†" :icon-inactive ""
                    :active true
                    :value 100
                    :onchange ""
                    :toggle-cmd "")))

(defwidget db-todo []
  (box :class "widget db-todo"
       :orientation "v"
       :space-evenly false
       :spacing 5
    (box :class "db-todo-top"
         :orientation "h"
         :space-evenly false
      (label :class "db-todo-label"
             :halign "start"
             :hexpand true
             :text "Tasks")
      (button :class "db-todo-add"
              :tooltip "New Task"
              :onclick "scripts/todo ask &" "Û∞å¥")
      (button :class "db-todo-clean"
              :tooltip "Remove Finished Tasks"
              :onclick "scripts/todo remove_finished" "Û∞±ù"))
    (scroll :height 200
            :vscroll true
      (box :orientation "v"
           :space-evenly false
           :spacing 2
        (for task in todos
          (box :orientation "h"
               :space-evenly false
            (button :class "db-todo-task"
                    :hexpand true
                    :onclick "scripts/todo ${task.finished ? "undo" : "do"} ${task.index}"
              (box :orientation "h"
                   :halign "start"
                   :space-evenly false
                   :spacing 10
                (label :class "db-todo-icon"
                       :text {task.finished ? "Û∞Ñµ" : "Û∞Ñ±"})
                (label :class "db-todo-text"
                       :halign "start"
                       :text {task.content})))
            (button :class "db-todo-remove"
                    :onclick "scripts/todo remove ${task.index}" "Û∞ñ≠")))))))

(defwidget sysinfo-chart [icon value name]
  ; use button for hover effect
  (button :class "sysinfo-chart sysinfo-chart-${name}"
          :halign "center"
    (overlay
      (circular-progress :width 40
                         :height 40
                         :value value
                         :start-at 75
                         :thickness 4)
      (label :class "sysinfo-icon" :text icon)
      (label :class "sysinfo-name" :markup "<span variant='petite-caps'>${name}</span>"))))

(defwidget db-sysinfo []
  (box :class "widget db-sysinfo"
       :orientation "h"
      (sysinfo-chart :name "cpu" :icon "Óâ¶" :value {EWW_CPU.avg})
      (sysinfo-chart :name "ram" :icon "Û∞çõ" :value {EWW_RAM.used_mem_perc})
      (sysinfo-chart :name "temp" :icon "Û∞èà" :value temp)
      (sysinfo-chart :name "disk" :icon "Û∞ãä" :value {EWW_DISK["/"].used_perc})))

(defwidget db-systray []
  (box :class "widget db-systray"
       :orientation "v"
       :vexpand false
       :hexpand false
       :space-evenly false
       :spacing 6
    ;; (label :class "label"
    ;;        :halign "start"
    ;;        :text "System Tray")
    (systray :class ""
             :pack-direction "ltr")))

(defwidget db-left []
  (box :class "db-left"
       :orientation "v"
       :space-evenly false
       :spacing 15
    (db-session)
    (db-quickset)))

(defwidget db-right []
  (box :class "db-right"
       :orientation "v"
       :space-evenly false
       :spacing 15
    (db-system)
    (db-player :current {player[player_index % arraylength(player)]})
    (db-todo)))

(defwidget db []
  (box :class "db"
       :orientation "v"
       :space-evenly false
       :spacing 15
    (db-top)
    (box :orientation "h"
         :spacing 15
      (db-left)
      (db-right))
    (db-sysinfo)
    (db-systray)))

; dashboard window
(defwindow dashboard
  :geometry (geometry :x "4"
                      :y "0"
                      :height "95%"
                      :width "40%"
                      :anchor "left center")
  :monitor 0
  :hexpand "false"
  :vexpand "false"
  (db))
