(defwidget bar-workspace []
  (box :class "bar-workspace"
       :orientation "v"
       :valign "start"
       :space-evenly false
       :spacing -5
    (for ws in workspace
      (button :onclick "hyprctl dispatch workspace ${ws.id}"
              :onmiddleclick "hyprctl dispatch workspace ${ws.id} & hyprctl dispatch exec '${ws.exec ?: ":"}'"
              :class "${ws.occupied ? "occupied" : ""} ${ws.active ? "active" : ""} ${ws.color}" "${ws.icon}"))))

(defwidget bar-wifi []
  (button :class "bar-wifi"
          :tooltip {net.device == "NONE" ? "No Connection" :
                    net.device == "ETHERNET" ? "Connected to Ethernet" :
                    net.signal > 0 ? "Connected to ${net.label}" : "Wifi not connected"}
          :onclick "scripts/popup wifi" {net.device == "NONE" ? "󰌙" :
                                         net.device == "ETHERNET" ? "󰌗" :
                                         net.signal == 0 ? "󰤮" : net.signal < 26 ? "󰤟" :
                                         net.signal < 51 ? "󰤢" : net.signal < 76 ? "󰤥" : "󰤨"}))

(defwidget bar-bt []
  (button :class "bar-bt"
          :tooltip "${bt.devices}"
          :onclick {bt.power ? "bluetoothctl power off" : "bluetoothctl power on"}
          :onrightclick "scripts/popup bluetooth" {bt.power ? "" : "󰂲"}))

(defwidget bar-volume []
  (eventbox :onhover "${EWW_CMD} update volhover=true"
            :onhoverlost "${EWW_CMD} update volhover=false"
   (box :orientation "v"
        :space-evenly false
        :tooltip "Volume: ${vol.volume}%"
        :spacing 2
    (revealer :transition "slideup"
              :reveal volhover
              :duration "550ms"
     (scale :class "volbar"
            :value {vol.volume}
            :orientation "v"
            :flipped true
            :max 101
            :min 0
            :onchange "amixer -D pulse sset Master {}%"))
    (button :class "bar-volume"
            :onclick "amixer -D pulse sset Master toggle"
            :onrightclick "scripts/popup audio" {vol.mute ? "󰖁" : vol.volume == 0 ? "󰕿" : vol.volume <= 40 ? "󰖀" : "󰕾"}))))
(defvar volhover false)

(defwidget bar-control []
  (box :orientation "v"
       :space-evenly false
       :class "bar-control"
    (bar-wifi)
    (bar-bt)
    (bar-volume)))

(defwidget bar-time []
  (eventbox :onhover "${EWW_CMD} update time_rev=true"
            :onhoverlost "${EWW_CMD} update time_rev=false"
    (box :orientation "v"
         :space-evenly false
      (box :orientation "v"
           :class "bar-time"
           :valign "end"
           :space-evenly "false"
        (button :class "time-hour"
                :onclick "scripts/popup calendar" {time.hour})
        (button :class "time-min"
                :onclick "scripts/popup calendar" {time.min}))
      (revealer :transition "slideup"
                :reveal time_rev
                :duration "550ms"
        (box :orientation "v"
             :class "bar-date"
             :valign "end"
             :space-evenly false
          (button :class "time-month"
                  :onclick "scripts/popup calendar" {time.month_short})
          (button :class "time-day"
                  :onclick "scripts/popup calendar" {time.day_num}))))))
(defvar time_rev false)

(defwidget bar-power []
  (eventbox :onhover "${EWW_CMD} update power=true"
            :onhoverlost "${EWW_CMD} update power=false"
   (box :orientation "v"
        :space-evenly false
        :class "bar-power"
    (revealer :transition "slideup"
              :reveal power
              :duration "550ms"
     (box :orientation "v"
          :space-evenly false

        (button :class "bar-lock"
                :tooltip "Lock"
                :onclick "scripts/popup lock" "")

        (button :class "bar-quit"
                :tooltip "Logout"
                :onclick "hyprctl dispatch exit 0" "")

        (button :class "bar-suspend"
                :tooltip "Suspend"
                :onclick "systemctl suspend"  "")

        (button :class "bar-reboot"
                :tooltip "Reboot"
                :onclick "reboot"  "")))

        (button :class "bar-off"
                :tooltip "Shutdown"
                :onclick "shutdown now"  ""))))
(defvar power false)

(defwidget bar-top []
  (box :orientation "v"
       :space-evenly "false"
       :valign "start"
    (button :class "bar-launcher"
            :onclick "scripts/popup dashboard"  "")
    (bar-workspace)))

(defwidget bar-end []
  (box :orientation "v"
       :space-evenly "false"
       :valign "end"
       :spacing 5
    (bar-control)
    (box :orientation "v"
         :space-evenly false
      (bar-time)
      (bar-power))))

;; Bar Widgets ;;
(defwidget bar []
  (box :class "bar-widget"
       :orientation "v"
    (bar-top)
    (bar-end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;              Window Section's               ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
  :geometry (geometry :x "0"
                      :y "0"
                      :height "100%"
                      :width "47px"
                      :anchor "left center")
  :monitor 0
  :exclusive true
  :hexpand "false"
  :vexpand "false"
  (bar))

